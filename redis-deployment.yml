# StorageClass para gerir os volumes para instancias do Redis
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: redis-storage-class
reclaimPolicy: Retain
provisioner: storage.k8s.io/minikube-hostpath
---
# volume para persistir snapshots
# TODO: Adicionar snapshots
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-volume
spec:
  accessModes: [ "ReadWriteMany" ]
  capacity:
    storage: 200Mi
  storageClassName: redis-storage-class
  hostPath:
    type: DirectoryOrCreate
    path: /redis
---
# Servico do redis para mapeamento do Pod, do tipo headless(clusterIP:None)
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
spec:
  clusterIP: None
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
# Instancia do Redis
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-ss
spec:
  serviceName: redis-svc
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      name: redis
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: redis
          image: redis
          volumeMounts:
            - name: redis-pvc
              mountPath: /var/dump-state
          ports:
            - containerPort: 6379
  volumeClaimTemplates:
    - metadata:
        name: redis-pvc
        annotations:
          volume.beta.kubernetes.io/storage-class: redis-storage-class
      spec:
        accessModes: ["ReadWriteMany"]
        resources:
          requests:
            storage: 200Mi

